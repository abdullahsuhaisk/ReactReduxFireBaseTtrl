{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notification.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/ProjectNew.js","store/actions/projectActions.js","components/test.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","components/config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","console","log","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignOutLinks","state","firebase","Links","uid","SignedInLinks","SignedOutLinks","Link","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","Notification","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","authorLastName","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleClick","preventDefault","signIn","authError","htmlFor","onChange","creds","credetials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","ProjectNew","createProject","history","push","name","cols","rows","authorId","add","objectSpread","Date","Test","get","exists","error","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","actions","message","projectReducer","action","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f05a1e65.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\nconst SignInLinks = (props) => {\r\n    console.log(props);\r\n\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/newProject\">New Project</NavLink></li>\r\n            <li><a onClick={props.signOut} >Log Out</a></li>\r\n            <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut:()=> dispatch(signOut())\r\n    }\r\n}\r\nexport default connect(null,mapDispatchToProps)(SignInLinks);","export const signIn = ( credetials ) => {\r\n    return (dispatch,getState,{getFirebase}) => {\r\n        const firebase= getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credetials.email,\r\n            credetials.password).then(()=>{\r\n                dispatch({type:'LOGIN_SUCCES'})\r\n            }).catch((err)=>{dispatch({type:'LOGIN_ERROR',err})})\r\n        }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n      const firebase = getFirebase();\r\n  \r\n      firebase.auth().signOut().then(() => {\r\n        dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n      });\r\n    }\r\n  }\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n      const firebase = getFirebase();\r\n      const firestore = getFirestore();\r\n  \r\n      firebase.auth().createUserWithEmailAndPassword(\r\n        newUser.email, \r\n        newUser.password\r\n      ).then(resp => {\r\n          console.log(resp);\r\n        return firestore.collection('users').doc(resp.user.uid).set({ //Nested Document\r\n          email:newUser.email,\r\n          firstName: newUser.firstName,\r\n          lastName: newUser.lastName,\r\n          initials: newUser.firstName[0] + newUser.lastName[0]\r\n        });\r\n      }).then(() => {\r\n        dispatch({ type: 'SIGNUP_SUCCES' });\r\n      }).catch((err) => {\r\n        dispatch({ type: 'SIGNUP_ERROR', err});\r\n      });\r\n    }\r\n  }","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/signIn\">Sıgn In</NavLink></li>\r\n            <li><NavLink to=\"/signUp\">Log In</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\nexport default SignOutLinks;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignInLinks from './SignedInLinks';\r\nimport SignOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n    //console.log(props);\r\n    const { auth, profile } = props;\r\n    const Links = auth.uid ? <SignInLinks profile={profile} /> :  <SignOutLinks />\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"brand-logo\"></Link>\r\n                {Links}\r\n               \r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    //console.log(state);\r\n    return{\r\n        auth:state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }   \r\n}\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"online-users\">\r\n            { notifications && notifications.map(item =>{\r\n              return <li key={item.id}>\r\n                <span className=\"pink-text\">{item.user} </span>\r\n                <span>{item.content}</span>\r\n                <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\r\n              </li>\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notifications","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return(\r\n            <div className=\"card z-depth-0 project-summery\">\r\n                <div className=\"card-content grey-text text-darken-3\">\r\n                    <span className=\"card-title\">{project.title}</span>\r\n                    <p>Posted by {project.authorFirstName}</p>\r\n                    <p className=\"grey-text\">{moment(project.createdAt).calendar()}</p>\r\n                </div>\r\n            </div>\r\n    );\r\n\r\n}\r\nexport default ProjectSummary;","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return(\r\n        <div className=\"project-list section\">\r\n            {\r\n                projects && projects.map( project => {\r\n                    return (\r\n                        <Link to={'/project/'+project.id} key={project.id}>\r\n                        <ProjectSummary project={project}  />\r\n                        </Link>)\r\n                })\r\n            }\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default ProjectList;","// We might use state and Life circle Method so I'm using class base component\r\nimport React,{ Component } from 'react';\r\nimport Notification from './Notification';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux'; \r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n    render(){\r\n        // console.log(this.props.projects)\r\n        const { projects, auth, notifications } = this.props\r\n        console.log(notifications);\r\n        console.log(this.props)\r\n        if(!auth.uid) return <Redirect to= '/signIn' />\r\nreturn(\r\n    <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n            <div className=\"col s12 m6\">\r\n                <ProjectList projects={projects} />\r\n            </div>\r\n            <div className=\"col s12 m5 offset-m1\">\r\n                <Notification notifications={notifications} />\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n     console.log(state)\r\n    return{\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\nexport default compose(connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects',orderBy:['createdAt','desc'] },\r\n        { collection:'notifications',limit:2, orderBy:['time','desc'] }\r\n    ]))(Dashboard);","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst ProjectDetails = (props) => {\r\n    //console.log(props);\r\n    const { project, auth } = props;\r\n    //console.log(project)\r\n    if(!auth.uid) return <Redirect to= '/signIn' />\r\n  if (project) {\r\n    return (\r\n        <div className=\"container section project-details\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">\r\n                    {project.title}\r\n                    </span>\r\n                    <p>\r\n                    {project.content}\r\n                    </p>\r\n                </div>\r\n                <div className=\"card-action grey lighten-4 grey-text\">\r\n                    <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                    <div> {moment(project.createdAt.toDate()).calendar()}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      )\r\n  }\r\n  else {\r\n        return(     \r\n    <div className=\"container center\">\r\n        <p>Loading..</p>\r\n    </div>)\r\n  }\r\n\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n    //console.log(state,ownProps);\r\n    const id = ownProps.match.params.id;\r\n    //console.log(id);\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),firestoreConnect(\r\n        [{collection:'projects'}])\r\n)(ProjectDetails);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\n class SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n            this.setState({\r\n                [e.target.id] : e.target.value\r\n            })\r\n    }\r\n    handleClick = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n    \r\n    render() {\r\n        const { authError, auth } = this.props;\r\n        if(auth.uid) return <Redirect to= '/' /> \r\n        return (\r\n          <div className=\"container\">\r\n            <form className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3\">\r\n                    Sign In\r\n                </h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <button onClick={this.handleClick}>Sign İn</button>\r\n                    <div className=\"center red-text\">\r\n                        {authError ? <p>{authError}</p> : null}\r\n                    </div>\r\n                </div>\r\n            </form>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n\r\n    const mapDispactToProps = (dispatch) => {\r\n    return ({\r\n        signIn: (creds) => dispatch((signIn(creds)))\r\n    })\r\n}\r\n    const mapStateToProps = (state) => {\r\n        return {\r\n            authError: state.auth.authError,\r\n            auth: state.firebase.auth\r\n        }\r\n    }\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispactToProps)(SignIn);\r\n","import React, { Component } from 'react';\r\nimport {signUp} from '../../store/actions/authActions';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n class SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName:'',\r\n        lastName:''\r\n    }\r\n    handleChange = (e) => {\r\n            this.setState({\r\n                [e.target.id] : e.target.value\r\n            })\r\n    }\r\n    handleClick = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n    }\r\n  render() {\r\n    // console.log(this.props);\r\n    const {auth, authError} = this.props;\r\n    if(!auth.uid)  return (\r\n      <div className=\"container\">\r\n        <form className=\"white\">\r\n            <h5 className=\"grey-text text-darken-3\">\r\n                Sign In\r\n            </h5>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"password\" >Password</label>\r\n                <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"Name\">Name</label>\r\n                <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"Last Name\">Last Name</label>\r\n                <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <button onClick={this.handleClick}>Sign Up</button>\r\n                <div className=\"red-text center\">\r\n                    {authError ? <p>{authError}</p> : null}\r\n                </div>\r\n            </div>\r\n        </form>\r\n      </div>\r\n    )\r\n    else return <Redirect to='/' />\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    //console.log(state);\r\n    return ({\r\n        auth: state.firebase.auth,\r\n        authError:state.auth.authError\r\n    })\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return ({\r\n        signUp : (newUser) => dispatch(signUp(newUser))\r\n    })\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from '../../store/actions/projectActions';\r\nimport { Redirect } from 'react-router-dom';\r\n class ProjectNew extends Component {\r\n    state = {\r\n        title: '',\r\n        content: '',\r\n    }\r\n    handleChange = (e) => {\r\n            this.setState({\r\n                [e.target.id] : e.target.value\r\n            })\r\n    }\r\n    handleClick = (e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/'); \r\n        //it likes <Redirect to='/' />\r\n    }\r\n\r\n  render() {\r\n      console.log(this.props)\r\n      const {auth} =this.props\r\n      if(!auth.uid) return <Redirect to='/signIn' />\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\">\r\n            <h5 className=\"grey-text text-darken-3\">\r\n                Project\r\n            </h5>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"title\">title</label>\r\n                <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"Content\" >Content</label>\r\n                <textarea name=\"content\" id=\"content\" cols=\"30\" rows=\"10\"  onChange={this.handleChange}></textarea>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <button onClick={this.handleClick}>Submit</button>\r\n            </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectNew);\r\n","export const createProject = (project) => {\r\n    return (dispatch, getState,{getFirebase, getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId:authorId,\r\n            createdAt: new Date()\r\n        }).then(()=>{\r\n            dispatch({type:'CREATE_PROJECT', project })\r\n        }).catch((err)=> {\r\n            dispatch({type:'CREATE_PROJECT_ERROR',err})\r\n        })\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport firebase from 'firebase';\r\n\r\n\r\nexport default class Test extends Component {\r\n  render() {\r\n     const firestore = firebase.firestore();\r\n    const db = firestore;\r\n\r\n    // firestore.collection('kullanicilar').add({\r\n    //     first:'Suha',\r\n    //     last:'isik',\r\n    //     middle:'Apo',\r\n    //     born:1993\r\n    // }).then((docRef)=> {\r\n    //     console.log('Document written by ID: ',docRef.id)\r\n    // }).catch(function(error) {\r\n    //     console.error(\"Error adding document: \", error);\r\n    // });\r\n  //   firestore.collection(\"cities\").doc(\"LA\").set({\r\n  //     name: \"Los Angeles\",\r\n  //     state: \"CA\",\r\n  //     country: \"USA\"\r\n  // })\r\n  // .then(function() {\r\n  //     console.log(\"Document successfully written!\");\r\n  // })\r\n  // .catch(function(error) {\r\n  //     console.error(\"Error writing document: \", error);\r\n  // });\r\n//   var cityRef = db.collection('cities').doc('BJ');\r\n\r\n// var setWithMerge = cityRef.set({\r\n//     capital: true,\r\n//     name:\"?\"\r\n// }, { merge: true });\r\n  \r\n    // firestore.collection('kullanicilar').get().then((querySnapshot)=>{\r\n    //     querySnapshot.forEach((doc)=> {\r\n    //         console.log(`${doc.id} => ${doc.data()}`)\r\n    //     })\r\n    // })\r\n    // Add a new document with a generated id.\r\n// db.collection(\"cities\").add({\r\n//   name: \"Tokyo\",\r\n//   country: \"Japan\"\r\n// })\r\n// .then(function(docRef) {\r\n//   console.log(\"Document written with ID: \", docRef.id);\r\n// })\r\n// .catch(function(error) {\r\n//   console.error(\"Error adding document: \", error);\r\n// });\r\n// var washingtonRef = db.collection(\"cities\").doc(\"DC\");\r\n\r\n// // Set the \"capital\" field of the city 'DC'\r\n// return washingtonRef.update({\r\n//     capital: true\r\n// })\r\n// .then(function() {\r\n//     console.log(\"Document successfully updated!\");\r\n// })\r\n// .catch(function(error) {\r\n//     // The document probably doesn't exist.\r\n//     console.error(\"Error updating document: \", error);\r\n// });\r\n// var frankDocRef = db.collection(\"users\").doc(\"frank\");\r\n// frankDocRef.set({\r\n//     name: \"Frank\",\r\n//     favorites: { food: \"Pizza\", color: \"Blue\", subject: \"recess\" },\r\n//     age: 12\r\n// });\r\n\r\n// // To update age and favorite color:\r\n// db.collection(\"users\").doc(\"frank\").update({\r\n//     age: 13,\r\n//     \"favorites.color\": \"Red\"\r\n// })\r\n// .then(function() {\r\n//     console.log(\"Document successfully updated!\");\r\n// });\r\n// var washingtonRef = db.collection(\"cities\").doc(\"istanbul\");\r\n\r\n// // Atomically add a new region to the \"regions\" array field.\r\n// washingtonRef.update({\r\n//     regions: firebase.firestore.FieldValue.arrayRemove(\"kadıkoy\")\r\n// });\r\n// db.collection(\"cities\").doc('istanbul').set({\r\n//     \"name\":\"istanbul\",\r\n//     country:'Turkey',\r\n//     regions:[\"Umraniye\"]\r\n// })\r\n// var citiesRef = db.collection(\"cities\");\r\n\r\n// citiesRef.doc(\"SF\").set({\r\n//     name: \"San Francisco\", state: \"CA\", country: \"USA\",\r\n//     capital: false, population: 860000,\r\n//     regions: [\"west_coast\", \"norcal\"] });\r\n// citiesRef.doc(\"LA\").set({\r\n//     name: \"Los Angeles\", state: \"CA\", country: \"USA\",\r\n//     capital: false, population: 3900000,\r\n//     regions: [\"west_coast\", \"socal\"] });\r\n// citiesRef.doc(\"DC\").set({\r\n//     name: \"Washington, D.C.\", state: null, country: \"USA\",\r\n//     capital: true, population: 680000,\r\n//     regions: [\"east_coast\"] });\r\n// citiesRef.doc(\"TOK\").set({\r\n//     name: \"Tokyo\", state: null, country: \"Japan\",\r\n//     capital: true, population: 9000000,\r\n//     regions: [\"kanto\", \"honshu\"] });\r\n// citiesRef.doc(\"BJ\").set({\r\n//     name: \"Beijing\", state: null, country: \"China\",\r\n//     capital: true, population: 21500000,\r\n//     regions: [\"jingjinji\", \"hebei\"] });\r\n\r\nvar docRef = db.collection(\"cities\").doc(\"SF\");\r\n\r\ndocRef.get().then(function(doc) {\r\n    if (doc.exists) {\r\n        console.log(\"Document data:\", doc.data());\r\n    } else {\r\n        // doc.data() will be undefined in this case\r\n        console.log(\"No such document!\");\r\n    }\r\n}).catch(function(error) {\r\n    console.log(\"Error getting document:\", error);\r\n});\r\n    return (\r\n      <div>\r\n        <p>Firebase Deneme içerikleri</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport ProjectNew from './components/projects/ProjectNew';\nimport Test from './components/test'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/project/:id\" component={ProjectDetails} />\n          <Route path=\"/signIn\" component={SignIn} />\n          <Route path=\"/signUp\" component={SignUp} />\n          <Route path=\"/newProject\" component={ProjectNew} />\n          <Route path=\"/test\" component={Test} />\n        </Switch>\n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError: null\r\n};\r\n\r\nconst authReducer = (state=initState, actions ) => {\r\n    switch (actions.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('Login error');\r\n            return ({\r\n                ...state, authError:'Login Failded'\r\n            })\r\n        case 'LOGIN_SUCCES':\r\n            console.log('Login Succes');\r\n            return({\r\n                ...state,authError:null\r\n            })\r\n        case 'SIGNOUT_SUCCES':\r\n            console.log('Signout Successfully');\r\n            return state;\r\n        case 'SIGNUP_SUCCES':\r\n            console.log('SignUp Succesly Finished');\r\n            return ({\r\n                ...state,\r\n                authError:null\r\n            })\r\n        case 'SIGNUP_ERROR':\r\n            console.log('SignUp failded error:',actions.err);\r\n            return({\r\n                ...state,\r\n                authError: actions.err.message\r\n            })\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n};\r\n\r\nconst projectReducer = (state=initState, action ) => {\r\n    switch (action.type) {\r\n        case \"CREATE_PROJECT\":\r\n            console.log('created project',action.project)\r\n            return state;\r\n        case \"CREATE_PROJECT_ERROR\":\r\n            console.log('Create project error',action.error)\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer;","import { combineReducers } from 'redux';\r\nimport authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n  // Initialize Firebase\r\n  var config = {\r\n    apiKey: \"AIzaSyCmWMsK7-mmhuJXNigET2oRzeUQ9sqtBdk\",\r\n    authDomain: \"marioplanreactreduxfirebase.firebaseapp.com\",\r\n    databaseURL: \"https://marioplanreactreduxfirebase.firebaseio.com\",\r\n    projectId: \"marioplanreactreduxfirebase\",\r\n    storageBucket: \"marioplanreactreduxfirebase.appspot.com\",\r\n    messagingSenderId: \"782150951298\"\r\n  };\r\n  firebase.initializeApp(config);\r\n  firebase.firestore().settings({ timestampsInSnapshots: true });\r\n  \r\n  export default firebase ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport thunk from 'redux-thunk';\nimport {reduxFirestore ,getFirestore } from 'redux-firestore';\nimport { getFirebase, reactReduxFirebase } from 'react-redux-firebase';\nimport fbConfig from '../src/components/config/fbConfig';\n\nconst store = createStore(rootReducer,\n    compose(\n      applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n      reactReduxFirebase(fbConfig,{useFirestoreForProfile: true, userProfile:'users',attachAuthIsReady: true}), // redux binding for firebase\n      reduxFirestore(fbConfig) // redux bindings for firestore\n    )\n    // Firebase reducer use to fireStore {useFirestoreForProfile: true} firebase.profile\n  );\n  //Wait to Render until firebase authReady\nstore.firebaseAuthIsReady.then(()=>{\n    ReactDOM.render(\n        <Provider store= {store}>\n            <App />\n        </Provider>\n            , document.getElementById('root'));\n})\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}